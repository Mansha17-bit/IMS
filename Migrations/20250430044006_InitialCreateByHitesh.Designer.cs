// <auto-generated />
using System;
using InsuranceManagementSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InsuranceManagementSystem.Migrations
{
    [DbContext(typeof(DatabaseDbContext))]
    [Migration("20250430044006_InitialCreateByHitesh")]
    partial class InitialCreateByHitesh
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InsuranceManagementSystem.Models.Agent", b =>
                {
                    b.Property<int>("AgentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AgentID"));

                    b.Property<string>("Agent_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AgentID");

                    b.ToTable("Agents");
                });

            modelBuilder.Entity("InsuranceManagementSystem.Models.Claim", b =>
                {
                    b.Property<int>("ClaimID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClaimID"));

                    b.Property<decimal>("ClaimAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Customer_ID")
                        .HasColumnType("int");

                    b.Property<int>("PolicyID")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClaimID");

                    b.HasIndex("Customer_ID");

                    b.HasIndex("PolicyID");

                    b.ToTable("Claims");
                });

            modelBuilder.Entity("InsuranceManagementSystem.Models.Customer", b =>
                {
                    b.Property<int>("Customer_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Customer_ID"));

                    b.Property<string>("Customer_Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer_Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Customer_Phone")
                        .HasColumnType("bigint");

                    b.HasKey("Customer_ID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("InsuranceManagementSystem.Models.CustomerPolicy", b =>
                {
                    b.Property<int>("CustomerPolicy_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerPolicy_ID"));

                    b.Property<int>("Customer_ID")
                        .HasColumnType("int");

                    b.Property<int>("PolicyID")
                        .HasColumnType("int");

                    b.HasKey("CustomerPolicy_ID");

                    b.HasIndex("Customer_ID");

                    b.HasIndex("PolicyID");

                    b.ToTable("CustomerPolicy");
                });

            modelBuilder.Entity("InsuranceManagementSystem.Models.Notification", b =>
                {
                    b.Property<int>("NotificationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationID"));

                    b.Property<int>("Customer_ID")
                        .HasColumnType("int");

                    b.Property<DateOnly>("Datasent")
                        .HasColumnType("date");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NotificationID");

                    b.HasIndex("Customer_ID");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("InsuranceManagementSystem.Models.Policy", b =>
                {
                    b.Property<int>("PolicyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PolicyID"));

                    b.Property<int>("AgentID")
                        .HasColumnType("int");

                    b.Property<string>("CoverageDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Policy_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PremiumAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateOnly>("ValidityPeriod")
                        .HasColumnType("date");

                    b.HasKey("PolicyID");

                    b.HasIndex("AgentID");

                    b.ToTable("Policies");
                });

            modelBuilder.Entity("InsuranceManagementSystem.Models.Claim", b =>
                {
                    b.HasOne("InsuranceManagementSystem.Models.Customer", "Customer")
                        .WithMany("Claims")
                        .HasForeignKey("Customer_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InsuranceManagementSystem.Models.Policy", "Policy")
                        .WithMany("Claims")
                        .HasForeignKey("PolicyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Policy");
                });

            modelBuilder.Entity("InsuranceManagementSystem.Models.CustomerPolicy", b =>
                {
                    b.HasOne("InsuranceManagementSystem.Models.Customer", "Customer")
                        .WithMany("CustomerPolicies")
                        .HasForeignKey("Customer_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InsuranceManagementSystem.Models.Policy", "Policy")
                        .WithMany("CustomerPolicies")
                        .HasForeignKey("PolicyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Policy");
                });

            modelBuilder.Entity("InsuranceManagementSystem.Models.Notification", b =>
                {
                    b.HasOne("InsuranceManagementSystem.Models.Customer", "Customer")
                        .WithMany("Notifications")
                        .HasForeignKey("Customer_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("InsuranceManagementSystem.Models.Policy", b =>
                {
                    b.HasOne("InsuranceManagementSystem.Models.Agent", "Agent")
                        .WithMany("AssignedPolicies")
                        .HasForeignKey("AgentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agent");
                });

            modelBuilder.Entity("InsuranceManagementSystem.Models.Agent", b =>
                {
                    b.Navigation("AssignedPolicies");
                });

            modelBuilder.Entity("InsuranceManagementSystem.Models.Customer", b =>
                {
                    b.Navigation("Claims");

                    b.Navigation("CustomerPolicies");

                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("InsuranceManagementSystem.Models.Policy", b =>
                {
                    b.Navigation("Claims");

                    b.Navigation("CustomerPolicies");
                });
#pragma warning restore 612, 618
        }
    }
}
